{"version":3,"sources":["findRNG/findRNG.worker.js","Navbar.jsx","Home.jsx","components/form/inputs.jsx","components/encounters/form/encounters-form.jsx","Table/Table.jsx","Table/Filter.jsx","Table/ColumnDropdown.jsx","Table/export-modal.jsx","Table/index.jsx","components/encounters/result/encounters-result-table.jsx","components/encounters/result/encounters-result-container.jsx","components/itemdrops/form/itemdrops-form.jsx","components/itemdrops/result/itemdrops-result-table.jsx","components/itemdrops/result/itemdrops-result-container.jsx","components/sequence/form/sequence-form.jsx","components/sequence/result/sequence-result-table.jsx","components/sequence/result/sequence-result-container.jsx","components/npc-movements/form/npc-movements-form.jsx","components/npc-movements/result/npc-movements-table.jsx","components/npc-movements/result/npc-movements-result.jsx","components/DoubleListSelector.jsx","components/rngfinder/Status.jsx","components/rngfinder/rngfinder.jsx","components/ListSelector.jsx","components/experience/experience-result.jsx","components/experience/experience-form.jsx","RunAssistant/index.jsx","RunAssistant/actions/RunAssistant.js","RunAssistant/reducers/RunAssistant.js","RunAssistant/Table.jsx","RunAssistant/controls/enemy-buttons/EnemyButton.jsx","RunAssistant/controls/enemy-buttons-compact/enemy-buttons-container.jsx","RunAssistant/actions/controls.js","RunAssistant/controls/enemy-buttons/even-column-container.jsx","RunAssistant/controls/enemy-buttons/enemy-buttons-view.jsx","RunAssistant/controls/enemy-buttons/enemy-buttons-container.jsx","RunAssistant/controls/modal/hotkey.jsx","RunAssistant/controls/modal/config-modal.jsx","RunAssistant/actions/config.js","RunAssistant/controls/controls-container.jsx","RunAssistant/reducers/config.js","RunAssistant/reducers/controls.js","RunAssistant/reducers/index.js","RunAssistant/RunAssistantTool.jsx","components/stats/index.jsx","components/stats/starting-stats/form/starting-stats-form.jsx","components/stats/starting-stats/result/starting-stats-result-table.jsx","components/stats/starting-stats/result/starting-stats-result-container.jsx","components/stats/level-ups/form/level-ups-form.jsx","components/stats/level-ups/result/level-ups-result-table.jsx","components/stats/level-ups/result/level-ups-result-container.jsx","App.jsx","registerServiceWorker.js","index.jsx"],"names":["addMethods","methods","module","exports","w","Worker","name","Routes","path","Navbar","Menu","widths","length","map","route","index","Item","as","NavLink","exact","key","to","Home","Container","text","Segment","Header","href","InputRNG","value","onChange","Form","Input","label","type","InputIterations","step","InputPartyLevel","withRouter","areas","history","useState","Helpers","numToHexString","rng","setRNG","iterations","setIterations","partylevel","setPartylevel","realistic","setRealistic","selectedAreas","setSelectedAreas","textAlign","onSubmit","event","preventDefault","params","URLSearchParams","append","push","toString","action","size","e","target","Dropdown","placeholder","options","areaNamesWithRandomEncounters","_e","data","multiple","search","selection","Checkbox","checked","Button","content","primary","defaultRowStyle","lineHeight","Table","props","columns","reduce","accumulator","column","show","columnsWidthRatio","width","total","rowStyle","headerHeight","height","onRowClick","rowCount","rowGetter","rowHeight","undefined","currentRow","backgroundColor","scrollToIndex","scrollToAlignment","cellRenderer","cellData","React","String","dataKey","Filter","constructor","super","filter","this","setState","filtering","state","searchApi","then","result","setRowsToRender","catch","error","console","SearchApi","tokenizePattern","componentDidMount","indexData","componentDidUpdate","prevProps","arraysEqual","_search","_worker","terminate","i","row","JSON","stringify","replace","trim","indexDocument","render","loading","currentTarget","ColumnToggle","onMouseDown","toggleColumn","ExportModal","formatType","setFormatType","copySuccess","setCopySuccess","handleFormatChange","fileName","setFileName","dataToText","csv","join","rows","rowData","forEach","Modal","trigger","Content","Group","inline","Radio","color","onClick","navigator","clipboard","writeText","setTimeout","blobData","fileBlob","Blob","FileSaver","saveAs","createDefaultRowsToRender","_row","TableContainer","rowsToRender","prevData","filterFromData","filterPropertiesFromObject","curData","rowIndex","dataForFilter","style","display","marginRight","ColumnDropdown","columnIndex","Presenter","encounters","location","parseInt","get","split","area","generateEncounters","RNG","fights","areaFights","concat","fight","enemy","enemyGroup","run","startRNG","battleRNG","wheel","champVal","isBattleValue","sort","a","b","flex","setArea","setEnemyGroup","Object","keys","encounterTable","group","ItemdropsTable","drops","calculateDrops","drop","sequence","wheelAttempts","marieText","cliveAppearance","getWheelAttempts","clone","next","isMarieDialogue","isCliveAppearance","npcs","setNpcs","NPCMovementsTable","NPCInfo","directionToString","num","npcCount","currentNPC","direction","getRNG2","div32ulo","getRNG","npc","ListButton","styled","button","ListContainer","div","Label","ListInnerContainer","DoubleListSelectorDiv","ListSelector","handleClick","click","list","bind","optionNames","DoubleListSelector","addItem","_index","handleChange","removeItem","_event","slice","val","RNGFinderStatus","cancel","message","progress","done","running","foundEncounterRNG","foundEncounterRNGPrevious","Progress","percent","indicating","negative","disabled","initialStatus","RNGFinder","selectedArea","setSelectedArea","fightList","setFightList","setRunning","status","setStatus","worker","setWorker","killWorker","webworker","findRNGWorker","workerParams","areaType","tableLength","encounterRate","onmessage","m","postMessage","handleStart","marginBottom","SelectedFight","enemyGroupName","partySize","onPartySizeChange","onSelectedFightDelete","className","min","max","SortableItem","SortableElement","listItemHandlers","sortIndex","justifyContent","SortableList","SortableContainer","SortableComponent","pressDelay","onSortEnd","oldIndex","newIndex","newArr","arrayMove","handleDrag","lockAxis","BigNumber","config","DECIMAL_PLACES","ROUNDING_MODE","expTable","levels","results","level","startingLevel","parseFloat","currentLevel","currentFight","exp","enemyLevel","levelDiff","Math","ceil","dividedBy","plus","toFormat","setLevels","selectedFights","setSelectedFights","prevSelectedFights","selectedFight","enemies","stats","lvl","RunAssistantForm","handleInputChange","prevState","handleAreaChange","handleSubmit","findFight","handleActions","SWITCH_AREA","currentArea","findIndex","rngIndex","getCurrentFight","fightsList","pattern","PREVIOUS_FIGHT","_action","NEXT_FIGHT","getCurrentFights","SELECT_FIGHT","FIND_FIGHT","patternMode","getCurrentArea","encounterTableIndex","getEnemyGroupEncounterIndex","searchStartIndex","searchMatchIndex","encounterSequenceToString","JUMP_RNG","calcFightIndexAfterRNGChange","jump","TOGGLE_PATTERN_MODE","getCurrentEnemies","mapDispatchToProps","selectFight","ConnectedTable","connect","RunAssistant","table","fontSize","enemyGroupImage","alt","src","img","EnemyImage","EnemyButtonText","EnemyButtonImage","CompactEnemyButtonText","CompactEnemyButtonImage","CompactEnemyButton","useImages","role","EnemyButton","setEnemyButtonGroupSize","ConnectedEnemyButtonContainer","groupSize","controls","compactEnemyButtonsGroupSize","hotkeys","compactModeEnemyButtons","enemyGroupSizes","groupSizes","enemyCount","includes","enemyGroupsBySize","groups","1","2","3","4","5","6","useCallback","selectGroupSize","handleHotkey","useEffect","handler","tagName","toLowerCase","indexOf","document","addEventListener","removeEventListener","margin","EvenColumnDiv","EnemyButtonsView","enemiesByEnemyCount","enemyButtonOnClick","enemiesGroup","vertical","enemyData","some","currentEnemyData","Array","arr","enemyName","HotkeyInput","selected","setSelected","hotkey","changeHotkey","otherProps","getElementById","id","changeUseImages","changeCompactMode","compactMode","changeColumnVisibility","changeColumnWidth","changeRowFontSize","changeTableRowHeight","changeTableHeaderHeight","changeCompactModeEnemyButtonsHotkey","resetToDefault","toggle","nextFight","prevFight","window","localStorage","setItem","saveToLocalStorage","jumpRNG","previousFight","switchArea","togglePatternMode","Controls","handleHotkeyNextFight","handleHotkeyPrevFight","componentWillUnmount","alignItems","ConnectedControls","findNextFight","getFight","StyledControls","initialState","CHANGE_USE_IMAGES","CHANGE_COMPACT_MODE","CHANGE_COLUMN_VISIBILITY","CHANGE_TABLE_ROW_HEIGHT","CHANGE_TABLE_HEADER_HEIGHT","CHANGE_ROW_FONT_SIZE","CHANGE_HOTKEY","CHANGE_COMPACT_MODE_ENEMY_BUTTONS_HOTKEY","RESET_TO_DEFAULT","_state","SET_ENEMY_BUTTON_GROUP_SIZE","combineReducers","logger","createLogger","RunAssistantTool","getItem","configDefault","parse","controlsDefault","store","createStore","reducer","applyMiddleware","Divider","hidden","StatsInfo","characters","setCharacters","setStartingLevel","levelsGained","setLevelsGained","Characters","startingStats","character","currentRNG","characterLevelUps","levelUps","charLevelUps","generateCharacterMultipleLevelup","levelUp","App","flexDirection","component","Areas","SequenceForm","SequenceResult","NPCForm","NPCResult","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","URL","process","origin","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8aa5b714.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = []\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"64569c854d6f3e134140.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","import * as React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { NavLink } from 'react-router-dom';\n\nconst Routes = [\n  { name: 'Home', path: '/' },\n  { name: 'Encounters', path: '/encounters' },\n  { name: 'RNG Sequence', path: '/sequence' },\n  { name: 'Stats', path: '/stats' },\n  { name: 'NPC Movements', path: '/npc' },\n  { name: 'Item Drops', path: '/drops' },\n  { name: 'RNG Finder', path: '/rngfinder' },\n  { name: 'Experience', path: '/experience' },\n  { name: 'Run Assistant', path: '/runassist' }\n];\n\nconst Navbar = () => {\n  return (\n    <Menu widths={Routes.length}>\n      {Routes.map((route, index) => {\n        return (\n          <Menu.Item\n            as={NavLink}\n            exact={true}\n            key={index}\n            name={route.name}\n            to={route.path}\n          />\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default Navbar;\n","import * as React from 'react';\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n  return (\n    <Container text={true}>\n      <Segment>\n        <Header>\n          About\n        </Header>\n        <p>\n          This is a webapp dedicated to random number generation(RNG) manipulation\n          in Suikoden 1. It's primary use is for routing and assisting a speedrun of\n          the game.\n        </p>\n      </Segment>\n      <Segment>\n        <Header>\n          <Link to=\"/encounters\">Encounter Tool</Link>\n        </Header>\n        <p>\n          Calculate upcoming fights based off the RNG seed and area.\n        </p>\n      </Segment>\n      <Segment>\n        <Header>\n          <Link to=\"/sequence\">RNG Sequence</Link>\n        </Header>\n        <p>\n          Calculate the sequence of upcoming RNG seeds based off a RNG seed.\n        </p>\n      </Segment>\n      <Segment>\n        <Header>\n          <Link to=\"/stats\">Stats</Link>\n        </Header>\n        <p>\n          Generate stat growths for characters based on RNG and levels.\n        </p>\n      </Segment>\n      <Segment>\n        <Header>\n          <Link to=\"/drops\">Item Drops</Link>\n        </Header>\n        <p>\n          Calculate what RNG seeds drop items based off a starting RNG seed and enemy group.\n        </p>\n      </Segment>\n      <Segment>\n        <Header>\n          <Link to=\"/rngfinder\">RNG Finder</Link>\n        </Header>\n        <p>\n          Find (approximately) the current RNG seed based off a sequence of fights.\n        </p>\n      </Segment>\n      <Segment>\n        <Header>\n          <Link to=\"/runassist\">Run Assistant</Link>\n        </Header>\n        <p>\n          Tool to assist in implementing RNG manipulation strategies while speedrunning.\n        </p>\n      </Segment>\n      <Segment>\n        <Header>\n          <a href=\"https://github.com/ak505188/SuikodenRNG-React/tree/master\">Github Repository</a>\n        </Header>\n        <p>\n          This webapp's Github repository. README details how the game calculates\n          most things RNG related.\n        </p>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default Home;\n","import * as React from 'react';\nimport { Form } from 'semantic-ui-react';\n\nexport const InputRNG = ({ value, onChange }) => (\n  <Form.Input\n    label=\"Initial RNG Value\"\n    name=\"rng\"\n    type=\"text\"\n    value={value}\n    onChange={onChange}\n  />\n);\n\nexport const InputIterations = ({ value, onChange }) => (\n  <Form.Input\n    label=\"Iterations\"\n    name=\"iterations\"\n    step=\"500\"\n    type=\"number\"\n    value={value}\n    onChange={onChange}\n  />\n);\n\nexport const InputPartyLevel = ({ value, onChange }) => (\n  <Form.Input\n    label=\"Party Level\"\n    name=\"partylevel\"\n    type=\"number\"\n    value={value}\n    onChange={onChange}\n  />\n);\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Helpers } from 'suikoden-rng-lib';\nimport { Container, Form } from 'semantic-ui-react';\nimport { InputRNG, InputIterations, InputPartyLevel } from 'components/form/inputs';\n\nconst EncountersForm = ({ areas, history }) => {\n  const [rng, setRNG] = useState(Helpers.numToHexString(0x12));\n  const [iterations, setIterations] = useState(1000);\n  const [partylevel, setPartylevel] = useState(0);\n  const [realistic, setRealistic] = useState(true)\n  const [selectedAreas, setSelectedAreas] = useState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const params = new URLSearchParams();\n    params.append('rng', rng);\n    params.append('iterations', iterations);\n    params.append('partylevel', partylevel);\n    params.append('realistic', realistic);\n    params.append('areas', selectedAreas);\n    history.push(`/encounters/result?${params.toString()}`);\n  }\n\n  return (\n    <Container textAlign=\"center\">\n      <Form onSubmit={handleSubmit} action='result' size=\"large\">\n        <InputRNG\n          value={rng}\n          onChange={e => setRNG(e.target.value)}\n        />\n        <InputIterations\n          value={iterations}\n          onChange={e => setIterations(e.target.value)}\n        />\n        <InputPartyLevel\n          value={partylevel}\n          onChange={e => setPartylevel(e.target.value)}\n        />\n        <Form.Dropdown\n          label=\"Areas\"\n          placeholder=\"Area\"\n          options={Helpers.areaNamesWithRandomEncounters.map(name =>\n            ({ key: name, value: name, text: areas[name].name })\n          )}\n          value={selectedAreas}\n          onChange={(_e, data) => setSelectedAreas(data.value)}\n          multiple={true}\n          search={true}\n          selection={true}\n        />\n        <Form.Checkbox\n          label=\"Realistic Mode\"\n          name=\"realistic\"\n          checked={realistic}\n          onChange={e => setRealistic(e.target.checked)}\n        />\n        <Form.Button type=\"submit\" content=\"Generate Encounters\" primary={true}/>\n      </Form>\n    </Container>\n  );\n}\n\nexport default withRouter(EncountersForm);\n","import * as React from 'react';\nimport { Column, Table as VirtTable } from 'react-virtualized';\n\nconst defaultRowStyle = {\n  lineHeight: 1\n};\n\nconst Table = props => {\n  const columns = props.columns.reduce(\n    (accumulator, column) => {\n      // Undefined show should still show columns.\n      // Only explicitly hidden columns will not be shown.\n      if (column.show !== false) {\n        accumulator.push(column);\n      }\n      return accumulator;\n    },\n    []);\n  const columnsWidthRatio: number = props.width /\n    columns.reduce((total, column) => (total += column.width), 0);\n  const rowStyle = props.rowStyle ? { ...defaultRowStyle, ...props.rowStyle } : defaultRowStyle;\n  return (\n    <VirtTable\n      headerHeight={props.headerHeight}\n      height={props.height}\n      onRowClick={({ index }) => {\n        if (props.onRowClick) {\n          props.onRowClick(index);\n        }\n      }}\n      rowCount={props.data.length}\n      rowGetter={({ index }) => props.data[index]}\n      rowHeight={props.rowHeight}\n      rowStyle={({ index }) => (props.currentRow !== undefined && props.currentRow === index\n        ? { ...rowStyle, backgroundColor: 'yellow' }\n        : rowStyle)}\n      scrollToIndex={props.currentRow}\n      scrollToAlignment=\"start\"\n      width={props.width}\n    >\n      {columns.map(column => {\n        return (\n          <Column\n            cellRenderer={({ cellData }) => {\n              if (cellData === null) {\n                return '';\n              }\n\n              if (React.isValidElement(cellData)) {\n                return cellData;\n              }\n\n              return String(cellData);\n            }}\n            key={column.key}\n            label={column.label}\n            dataKey={column.key}\n            width={columnsWidthRatio * column.width}\n          />\n        );\n      })}\n    </VirtTable>\n  );\n};\n\nexport default Table;\n","import * as React from 'react';\nimport { Input } from 'semantic-ui-react';\nimport SearchApi from 'js-worker-search';\nimport { Helpers } from 'suikoden-rng-lib';\n\nexport default class Filter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchApi: new SearchApi({ tokenizePattern: /,/ }),\n      filter: '',\n      filtering: false,\n    };\n  }\n\n  componentDidMount() {\n    this.indexData(this.props.data);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!Helpers.arraysEqual(this.props.data, prevProps.data)) {\n      this.state.searchApi._search._worker.terminate();\n      this.setState({ searchApi: new SearchApi({ tokenizePattern: /,/ }) }, () => {\n        this.indexData(this.props.data);\n        this.filter();\n      });\n    }\n  }\n\n  indexData(data) {\n    for (let i = 0; i < data.length; i++) {\n      const row: string = JSON.stringify(data[i])\n        .replace(/{|}/g, '')\n        .replace(/\"[^,]*?\":/g, '')\n        .replace(/\"/g, '')\n        .trim();\n      this.state.searchApi.indexDocument(i, row);\n    }\n  }\n\n  filter = () => {\n    this.setState({ filtering: true }, () => {\n      this.state.searchApi.search(this.state.filter)\n        .then((result) => {\n          this.props.setRowsToRender(result);\n          this.setState({ filtering: false });\n        })\n        .catch((error) => console.error(error));\n    });\n  }\n\n  render() {\n    return (\n      <Input\n        placeholder=\"Filter\"\n        loading={this.state.filtering}\n        type=\"text\"\n        onChange={e =>\n          this.setState({ filter: e.currentTarget.value }, () => this.filter())\n        }\n        value={this.state.filter}\n      />\n    );\n  }\n}\n","import * as React from 'react';\nimport { Checkbox, Dropdown } from 'semantic-ui-react';\n\nconst ColumnToggle = props => {\n  return (\n    <Dropdown\n      selection={true}\n      text=\"Columns\"\n      options={props.columns.map((column, index) => {\n        return (\n          <Checkbox\n            as={Dropdown.Item}\n            key={column.key}\n            label={column.label}\n            onMouseDown={e => {\n              e.preventDefault();\n              props.toggleColumn(index);\n            }}\n            checked={props.columns[index].show !== false}\n          />\n        );\n      })}\n    />\n  );\n};\n\nexport default ColumnToggle;\n","import React, { useState } from 'react';\nimport { Form, Modal } from 'semantic-ui-react';\nimport FileSaver from 'file-saver';\n\nconst ExportModal = props => {\n  const [formatType, setFormatType] = useState('csv');\n  const [copySuccess, setCopySuccess] = useState('');\n  const handleFormatChange = (e, { value }) => setFormatType(value);\n  const [fileName, setFileName] = useState('');\n\n  const copyToClipboard = () => {\n    const text = dataToText();\n    navigator.clipboard.writeText(text)\n      .then(() => setCopySuccess('Copied!'), () => setCopySuccess('Failure.'));\n    setTimeout(() => setCopySuccess(''), 3000);\n  }\n\n  const dataToText = () => {\n    if (formatType === 'csv') {\n      const columns = props.columns.filter(column => column.show !== false);\n      const csv = [];\n      csv.push(columns.map(column => column.label).join());\n\n      const rows = props.data.map(row => {\n        const rowData = [];\n        columns.forEach(column => rowData.push(row[column.key]));\n        return rowData.join();\n      }).join('\\r\\n');\n\n      csv.push(rows);\n      return csv.join('\\r\\n');\n    }\n    return JSON.stringify(props.data, null, 2);\n  }\n\n\n  const download = () => {\n    let blobData = dataToText();\n    let mimeType = formatType === 'json'\n      ? 'application/json;charset=utf-8'\n      : 'text/csv;charset=utf-8;'\n\n    const fileBlob = new Blob([blobData], { type: mimeType });\n    FileSaver.saveAs(fileBlob, `${fileName}.${formatType}`);\n  }\n\n  return (\n    <Modal trigger={props.trigger}>\n      <Modal.Header>\n        Export Table\n      </Modal.Header>\n      <Modal.Content>\n        <Form>\n          <Form.Group inline={true}>\n            <Form.Radio\n              label='CSV'\n              value='csv'\n              checked={formatType === 'csv'}\n              onChange={handleFormatChange}\n            />\n            <Form.Radio\n              label='JSON'\n              value='json'\n              checked={formatType === 'json'}\n              onChange={handleFormatChange}\n            />\n            <Form.Button color='green' content='Copy to Clipboard' onClick={copyToClipboard}/>\n            <span>{copySuccess}</span>\n          </Form.Group>\n          <Form.Group inline={true}>\n            <Form.Input\n              label='Filename'\n              type='text'\n              placeholder='Filename'\n              value={fileName}\n              onChange={e => setFileName(e.target.value)}\n            />\n            <Form.Button content='Download' primary={true} onClick={download}/>\n          </Form.Group>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default ExportModal;\n","import * as React from 'react';\nimport { AutoSizer } from 'react-virtualized';\nimport { Button } from 'semantic-ui-react';\nimport { Helpers } from 'suikoden-rng-lib';\nimport Table from './Table';\nimport Filter from './Filter';\nimport ColumnDropdown from './ColumnDropdown';\nimport ExportModal from './export-modal';\n\nconst createDefaultRowsToRender = (data => data.map((_row, index) => index));\n\nexport default class TableContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rowsToRender: createDefaultRowsToRender(props.data),\n      columns: props.columns\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevData = this.props.filterFromData\n      ? prevProps.data.map(row => Helpers.filterPropertiesFromObject(row, this.props.filterFromData))\n      : prevProps.data;\n    const curData = this.props.filterFromData\n      ? this.props.data.map(row => Helpers.filterPropertiesFromObject(row, this.props.filterFromData))\n      : this.props.data;\n    if (!Helpers.arraysEqual(prevData, curData)) {\n      this.setState({ rowsToRender: createDefaultRowsToRender(this.props.data) });\n    }\n  }\n\n  render() {\n    const data = this.state.rowsToRender.map(rowIndex => this.props.data[rowIndex]);\n\n    const dataForFilter = this.props.filterFromData ?\n      this.props.data.map(row =>\n        Helpers.filterPropertiesFromObject(row, this.props.filterFromData)) :\n      this.props.data;\n\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <React.Fragment>\n            <div style={{ display: 'flex', 'justifyContent': 'space-between', width, height: 38 }}>\n              { this.props.filter !== false ?\n                <div style={{ marginRight: 'auto' }}>\n                  <Filter\n                    data={\n                      this.props.filterFromData !== undefined ?\n                      dataForFilter :\n                      this.props.data\n                    }\n                    setRowsToRender={(rows) => this.setState({ rowsToRender: rows })}\n                  />\n                </div> : null }\n              <ExportModal columns={this.state.columns} data={data} trigger={<Button primary>Export</Button>}/>\n              <ColumnDropdown\n                columns={this.state.columns}\n                toggleColumn={(columnIndex => {\n                  const columns = this.state.columns;\n                  columns[columnIndex].show = columns[columnIndex].show === false ? true : false;\n                  this.setState({ columns });\n                })}\n              />\n            </div>\n            <Table\n              {...this.props}\n              currentRow={this.props.currentRow}\n              columns={this.state.columns}\n              data={data}\n              height={height - 38}\n              width={width}\n              headerHeight={this.props.headerHeight || 30}\n              rowHeight={this.props.rowHeight || 30}\n              rowStyle={this.props.rowStyle || {}}\n            />\n          </React.Fragment>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n","import * as React from 'react';\nimport VirtTable from 'Table';\n\nconst Presenter = props => {\n  const columns = [\n    { label: 'Area', key: 'area', width: 200 },\n    { label: 'Enemy Group', key: 'enemy', width: 300 },\n    { label: 'Index', key: 'index', width: 100 },\n    { label: 'Run', key: 'run', width: 100 },\n    { label: 'Encounter RNG', key: 'startRNG', width: 150 },\n    { label: 'Battle RNG', key: 'battleRNG', width: 150 },\n    { label: 'Wheel Attempts', key: 'wheel', width: 150 },\n    { label: 'Champion Value', key: 'champVal', width: 150, show: false },\n    { label: 'Is Battle Value', key: 'isBattleValue', width: 150, show: false }\n  ];\n  return <VirtTable columns={columns} data={props.encounters}/>;\n};\n\nexport default Presenter;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport { Helpers, RNG } from 'suikoden-rng-lib';\nimport EncountersTable from './encounters-result-table';\n\nconst EncountersContainer = ({ areas, location }) => {\n  const params = new URLSearchParams(location.search);\n  const rng = parseInt(params.get('rng'));\n  const iterations = parseInt(params.get('iterations'));\n  const partylevel = parseInt(params.get('partylevel'));\n  const selectedAreas = params.get('areas').split(',').map((name) => areas[name]);\n  const realistic = params.get('realistic') === 'true';\n  const encounters = selectedAreas\n    .map(area => area.generateEncounters(new RNG(rng), iterations, partylevel, realistic))\n    .reduce((fights, areaFights) => fights.concat(areaFights), [])\n    .map(fight => ({\n        area: fight.area,\n        enemy: fight.enemyGroup.name,\n        index: fight.index,\n        run: fight.run ? 'Run' : 'Fail',\n        startRNG: Helpers.numToHexString(fight.startRNG),\n        battleRNG: Helpers.numToHexString(fight.battleRNG),\n        wheel: fight.wheel,\n        champVal: fight.enemyGroup.champVal,\n        isBattleValue: fight.isBattleValue\n    }))\n    .sort((a, b) => {\n      if (a.index !== b.index) {\n        return a.index - b.index;\n      }\n      return a.area < b.area ? -1 : 1;\n    });\n\n  return (\n    <Container style={{ flex: 1 }} textAlign=\"center\">\n      <EncountersTable encounters={encounters}/>\n    </Container>\n  );\n}\n\nexport default withRouter(EncountersContainer);\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Form } from 'semantic-ui-react';\nimport { Helpers } from 'suikoden-rng-lib';\nimport { InputRNG, InputIterations } from 'components/form/inputs';\n\nconst ItemDropsForm = ({ areas, history }) => {\n  const [rng, setRNG] = useState(Helpers.numToHexString(0x12));\n  const [iterations, setIterations] = useState(1000);\n  const [area, setArea] = useState('Cave of the Past');\n  const [enemyGroup, setEnemyGroup] = useState(0);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const params = new URLSearchParams();\n    params.append('rng', rng);\n    params.append('iterations', iterations);\n    params.append('area', area);\n    params.append('enemyGroup', enemyGroup);\n    history.push(`/drops/result?${params.toString()}`);\n  }\n\n  return (\n    <Container textAlign=\"center\">\n      <Form size=\"large\" onSubmit={handleSubmit}>\n        <InputRNG\n          value={rng}\n          onChange={e => setRNG(e.target.value)}\n        />\n        <InputIterations\n          value={iterations}\n          onChange={e => setIterations(e.target.value)}\n        />\n        <Form.Dropdown\n          label=\"Area\"\n          placeholder=\"Area\"\n          options={Object.keys(areas).map(name =>\n            ({ key: name, value: name, text: areas[name].name })\n          )}\n          value={area}\n          onChange={(_e, data) => setArea(data.value)}\n          search={true}\n          selection={true}\n        />\n        <Form.Dropdown\n          label=\"Enemy Group\"\n          placeholder=\"Enemy Group\"\n          options={areas[area].encounterTable.map((group, index) => ({\n            key: group.name, value: index, text: group.name\n          }))}\n          value={enemyGroup}\n          onChange={(_e, data) => setEnemyGroup(data.value)}\n          search={true}\n          selection={true}\n        />\n        <Form.Button type=\"submit\" content=\"Calculate Drops\" primary={true}/>\n      </Form>\n    </Container>\n  );\n};\n\nexport default withRouter(ItemDropsForm);\n","import * as React from 'react';\nimport VirtTable from 'Table';\n\nconst ItemdropsTable = ({ drops })=> {\n  const columns = [\n    { label: 'Index', key: 'index', width: 100 },\n    { label: 'Drop', key: 'drop', width: 300 },\n    { label: 'RNG', key: 'rng', width: 150 }\n  ];\n  return <VirtTable data={drops} columns={columns}/>;\n};\n\nexport default ItemdropsTable;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport { Helpers, RNG } from 'suikoden-rng-lib';\nimport ItemdropsTable from './itemdrops-result-table';\n\nconst ItemdropsContainer = ({ areas, location }) => {\n  const params = new URLSearchParams(location.search);\n  const rng = new RNG(parseInt(params.get('rng')));\n  const iterations = parseInt(params.get('iterations'));\n  const area = areas[params.get('area')];\n  const group = area.encounterTable[params.get('enemyGroup')];\n  const drops =\n    group.calculateDrops(rng, iterations).map((drop, index) => ({\n      drop: drop.drop,\n      index,\n      rng: Helpers.numToHexString(drop.rng)\n    })\n  );\n\n  return (\n    <Container style={{ flex: 1 }} textAlign=\"center\">\n      <ItemdropsTable drops={drops}/>\n    </Container>\n  );\n};\n\nexport default withRouter(ItemdropsContainer);\n","import React, { useState } from 'react';\nimport { Helpers } from 'suikoden-rng-lib';\nimport { Container, Form } from 'semantic-ui-react';\nimport { InputRNG, InputIterations } from 'components/form/inputs';\nimport { withRouter } from 'react-router-dom';\n\nconst SequenceForm = ({ history }) => {\n  const [rng, setRNG] = useState(Helpers.numToHexString(0x12));\n  const [iterations, setIterations] = useState(1000);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const params = new URLSearchParams();\n    params.append('rng', rng);\n    params.append('iterations', iterations);\n    history.push(`/sequence/result?${params.toString()}`);\n  }\n\n  return (\n    <Container textAlign=\"center\">\n      <Form size=\"large\" onSubmit={handleSubmit}>\n        <InputRNG\n          value={rng}\n          onChange={event => setRNG(event.target.value)}\n        />\n        <InputIterations\n          value={iterations}\n          onChange={event => setIterations(event.target.value)}\n        />\n        <Form.Button type=\"submit\" content=\"Calculate Sequence\" primary={true}/>\n      </Form>\n    </Container>\n  );\n}\n\nexport default withRouter(SequenceForm);\n","import * as React from 'react';\nimport VirtTable from 'Table';\n\nconst Presenter = ({ sequence }) => {\n  const columns = [\n    { key: 'index', label: 'Index', width: 100 },\n    { key: 'rng', label: 'RNG', width: 150 },\n    { key: 'wheelAttempts', label: 'Wheel Attempts', width: 200, show: false },\n    { key: 'cliveAppearance', label: 'Clive Appearance' , width: 200, show: false },\n    { key: 'marieText', label: 'Marie Dialogue' , width: 200, show: false }\n  ];\n  return <VirtTable columns={columns} data={sequence}/>;\n};\n\nexport default Presenter;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport SequenceTable from './sequence-result-table';\nimport { RNG } from 'suikoden-rng-lib';\n\nconst SequenceResult = ({ location }) => {\n  const params = new URLSearchParams(location.search);\n  const rng = new RNG(parseInt(params.get('rng')));\n  const iterations = parseInt(params.get('iterations'));\n  const sequence = [];\n  const wheelAttempts = [];\n  const marieText = [];\n  const cliveAppearance = [];\n  for (let i = 0; i < iterations; i++) {\n    sequence.push(rng.toString());\n    wheelAttempts.push(RNG.getWheelAttempts(rng.clone().next()));\n    marieText.push(rng.isMarieDialogue() ? 'Antonio Dialogue' : 'No Dialogue');\n    cliveAppearance.push(rng.isCliveAppearance() ? 'Clive' : 'No Clive');\n    rng.next();\n  }\n\n  return (\n    <Container style={{ flex: 1 }} textAlign=\"center\">\n      <SequenceTable sequence={sequence.map((rng, index) => ({\n        rng,\n        index,\n        wheelAttempts: wheelAttempts[index],\n        marieText: marieText[index],\n        cliveAppearance: cliveAppearance[index]\n      }))}/>\n    </Container>\n  );\n}\n\nexport default withRouter(SequenceResult);\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Form } from 'semantic-ui-react';\nimport { Helpers } from 'suikoden-rng-lib';\nimport { InputRNG, InputIterations } from 'components/form/inputs';\n\nconst NPCalcForm = ({ history }) => {\n  const [rng, setRNG] = useState(Helpers.numToHexString(0x12));\n  const [iterations, setIterations] = useState(1000);\n  const [npcs, setNpcs] = useState(1);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const params = new URLSearchParams();\n    params.append('rng', rng);\n    params.append('iterations', iterations);\n    params.append('npcs', npcs);\n    history.push(`/npc/result?${params.toString()}`);\n  }\n\n  return (\n    <Container textAlign=\"center\">\n      <Form onSubmit={handleSubmit}>\n        <InputRNG\n          value={rng}\n          onChange={event => setRNG(event.target.value)}\n        />\n        <InputIterations\n          value={iterations}\n          onChange={event => setIterations(event.target.value)}\n        />\n        <Form.Input\n          label=\"Number of NPCs\"\n          name=\"npcs\"\n          step=\"1\"\n          type=\"number\"\n          value={npcs}\n          onChange={event => setNpcs(event.target.value)}\n        />\n        <Form.Button type=\"submit\" content=\"Calculate NPC Movements\" primary={true}/>\n      </Form>\n    </Container>\n  );\n}\n\nexport default withRouter(NPCalcForm);\n","import * as React from 'react';\nimport VirtTable from 'Table';\n\nconst NPCMovementsTable = ({ NPCInfo }) => {\n  const columns = [\n    { key: 'index', label: 'Index', width: 100 },\n    { key: 'npc', label: 'NPC #', width: 50 },\n    { key: 'direction', label: 'Direction', width: 150 },\n    { key: 'rng', label: 'RNG', width: 150 }\n\n  ];\n  return <VirtTable columns={columns} data={NPCInfo}/>;\n};\n\nexport default NPCMovementsTable;\n","import * as React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport Table from './npc-movements-table';\nimport { Helpers, RNG } from 'suikoden-rng-lib';\n\nfunction directionToString(num) {\n  const dir = num % 4;\n  switch (dir) {\n    case 0:\n      return 'Down';\n    case 1:\n      return 'Up';\n    case 2:\n      return 'Left';\n    case 3:\n      return 'Right';\n    default:\n      return '?';\n  }\n}\n\nconst NPCMovementsResult = ({ location }) => {\n  const params = new URLSearchParams(location.search);\n  const rng = new RNG(parseInt(params.get('rng')));\n  const iterations = parseInt(params.get('iterations'));\n  const npcCount = parseInt(params.get('npcs'));\n  const result = [];\n  let currentNPC = 0;\n  for (let i = 0; i < iterations; i++) {\n    const move = rng.getRNG2() < 0xcb;\n    let direction = '';\n    const index = i;\n    if (move) {\n      rng.next();\n      i++;\n      direction = 'Previous Movement';\n      if (Helpers.div32ulo(rng.getRNG2(), 0x1fff) > 0) {\n        rng.next();\n        i++;\n        direction = directionToString(Helpers.div32ulo(rng.getRNG2(), 0x1999));\n      }\n      result.push({ index, rng: Helpers.numToHexString(rng.getRNG()), direction, npc: currentNPC + 1 });\n    } else {\n      currentNPC = (currentNPC + 1) % npcCount;\n    }\n    rng.next();\n  }\n\n  return (\n    <Container style={{ flex: 1 }} textAlign=\"center\">\n      <Table NPCInfo={result}/>\n    </Container>\n  );\n}\n\nexport default withRouter(NPCMovementsResult);\n","import * as React from 'react';\nimport styled from 'styled-components';\n// import { Label } from 'semantic-ui-react';\n\nexport const ListButton = styled.button`\n  &&& {\n    width: 100%;\n    border: 0;\n    border-radius: .28571429rem;\n    background-color: white;\n    color: black;\n  }\n`;\n\nexport const ListContainer = styled.div`\n  &&& {\n    width: 49.75%;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const Label = styled.label`\n  &&& {\n    margin: 0 0 .28571429rem 0;\n    color: rgba(0,0,0,.87);\n    font-size: .92857143em;\n    font-weight: 700;\n    text-transform: none;\n  }\n`;\n\nexport const ListInnerContainer = styled.div`\n  &&& {\n    border: 1px solid rgba(34,36,38,.15);\n    border-radius: .28571429rem;\n    width: 100%;\n    flex: 1;\n  }\n`;\n\nexport const DoubleListSelectorDiv = styled.div`\n  &&& {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin-bottom: 1em;\n  }\n`;\n\nexport class ListSelector extends React.Component {\n  handleClick = (index, event) => {\n    event.preventDefault();\n    this.props.click(index, event);\n  }\n\n  render() {\n    return (\n      <ListContainer>\n        <Label>\n          {this.props.label}\n        </Label>\n        <ListInnerContainer>\n          {this.props.list.map((value, index) => {\n            return (\n              <ListButton\n                onClick={this.handleClick.bind(this, index)}\n                key={index}\n                value={index}\n              >\n                {\n                  this.props.optionNames ?\n                    this.props.optionNames[index] :\n                    value\n                }\n              </ListButton>\n            );\n          })}\n        </ListInnerContainer>\n      </ListContainer>\n    );\n  }\n}\n\nexport default class DoubleListSelector extends React.Component {\n  addItem = (_index, event) => {\n    this.props.handleChange([...this.props.list, parseInt(event.currentTarget.value)]);\n  }\n\n  removeItem = (index, _event) => {\n    this.props.handleChange([...this.props.list.slice(0, index), ...this.props.list.slice(index + 1)]);\n  }\n\n  render() {\n    return (\n      <DoubleListSelectorDiv>\n        <ListSelector list={this.props.options} label=\"Add Enemies\" click={this.addItem}/>\n        <ListSelector\n          label=\"Remove Enemies\"\n          list={this.props.list.map((val, _index) => {\n            return this.props.options[val];\n          })}\n          click={this.removeItem}\n        />\n      </DoubleListSelectorDiv>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Button, Container, Progress, Segment } from 'semantic-ui-react';\nimport { Helpers } from 'suikoden-rng-lib';\n\nconst RNGFinderStatus = ({ cancel, message, progress, done, result, running }) => (\n  <Container textAlign=\"center\">\n    {result &&\n      <Segment>\n        <p>\n          First Battle RNG: {Helpers.numToHexString(result.foundEncounterRNG)}\n        </p>\n        <p>\n          Previous Battle RNG: {Helpers.numToHexString(result.foundEncounterRNGPrevious)}\n        </p>\n      </Segment>\n    }\n    <Progress\n      percent={done ? 100 : progress}\n      progress={true}\n      indicating={true}\n      label={message}\n    />\n    <Button\n      type=\"button\"\n      onClick={cancel}\n      content=\"Terminate\"\n      negative={true}\n      disabled={!running}\n    />\n  </Container>\n);\n\nexport default RNGFinderStatus;\n","import React, { useState } from 'react';\nimport DoubleListSelector from 'components/DoubleListSelector';\nimport { InputRNG } from 'components/form/inputs';\nimport { Helpers } from 'suikoden-rng-lib';\nimport { Container, Form } from 'semantic-ui-react';\nimport RNGFinderStatus from './Status';\n\nimport findRNGWorker from 'workerize-loader!findRNG/findRNG.worker.js'; // eslint-disable-line import/no-webpack-loader-syntax\n\nconst initialStatus = {\n  progress: 0,\n  message: '',\n  done: false,\n};\n\nconst RNGFinder = ({ areas }) => {\n  const [rng, setRNG] = useState(Helpers.numToHexString(0x12));\n  const [selectedArea, setSelectedArea] = useState(Helpers.areaNamesWithRandomEncounters[0]);\n  const [fightList, setFightList] = useState([]);\n  const [running, setRunning] = useState(false);\n  const [status, setStatus] = useState(initialStatus);\n  const [worker, setWorker] = useState();\n\n  const handleAreaChange = (_event, data) => {\n    const area = data.value;\n    setFightList(area === selectedArea ? fightList : []);\n    setSelectedArea(area);\n  }\n\n  const handleStart = _event => {\n    if (fightList.length < 2) {\n      return;\n    }\n\n    if (worker !== undefined) {\n      killWorker();\n    }\n\n    const webworker = new findRNGWorker();\n    const area = areas[selectedArea];\n    const workerParams = {\n      areaType: area.areaType,\n      tableLength: area.encounterTable.length,\n      encounterRate: area.encounterRate\n    };\n\n    webworker.onmessage = m => {\n      const { done, message, progress, result } = m.data;\n      setStatus({ done, message, progress, result });\n      setRunning(!done);\n    };\n\n    setWorker(webworker);\n    setRunning(true);\n    webworker.postMessage({ workerParams, encounters: fightList, rng: parseInt(rng) });\n  }\n\n  const killWorker = () => {\n    worker.terminate();\n    setWorker(undefined);\n  }\n\n  const handleStop = event => {\n    event.preventDefault();\n    setRunning(false);\n    setStatus(initialStatus);\n    killWorker();\n  }\n\n  return (\n    <Container textAlign=\"center\">\n      <Form size=\"large\" onSubmit={() => handleStart()}>\n        <InputRNG\n          value={rng}\n          onChange={e => setRNG(Helpers.numToHexString(e.target.value))}\n        />\n        <Form.Dropdown\n          label=\"Areas\"\n          placeholder=\"Area\"\n          options={Helpers.areaNamesWithRandomEncounters.map(name =>\n            ({ key: name, value: name, text: areas[name].name })\n          )}\n          value={selectedArea}\n          onChange={handleAreaChange}\n          search={true}\n          selection={true}\n        />\n        <DoubleListSelector\n          handleChange={list => setFightList(list)}\n          list={fightList}\n          options={areas[selectedArea].encounterTable.map(group => group.name)}\n        />\n        <Form.Button style={{ marginBottom: '1em' }} type=\"submit\" content=\"Find RNG Seed\" primary={true}/>\n      </Form>\n        {status.message !== '' &&\n          <RNGFinderStatus\n            running={running}\n            cancel={handleStop}\n            {...status}\n          />\n        }\n    </Container>\n  );\n}\n\nexport default RNGFinder;\n","import React from 'react';\nimport { Label, ListContainer, ListInnerContainer, ListButton } from './DoubleListSelector';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\nconst SelectedFight = ({ enemyGroupName, index, partySize, onPartySizeChange, onSelectedFightDelete }) => (\n  <span className=\"experience-selected-fight-container\">\n    <span\n      className=\"experience-remove-fight\"\n      onClick={onSelectedFightDelete}\n    >\n      X\n    </span>\n    <input className=\"experience-party-size\" type=\"number\" min=\"0\" max=\"6\" value={partySize} onChange={e => onPartySizeChange(e.target.value, index)}/>\n    <span className=\"experience-fight-name\">{enemyGroupName}</span>\n  </span>\n);\n\n\nconst SortableItem = SortableElement(({ value, listItemHandlers, sortIndex }) => {\n  return (\n    <ListButton style={{ display: 'flex', justifyContent: 'space-between' }}>\n      <SelectedFight\n        enemyGroupName={value.enemyGroup.name}\n        partySize={value.partySize}\n        onPartySizeChange={listItemHandlers.onPartySizeChange}\n        index={sortIndex}\n        onSelectedFightDelete={() => listItemHandlers.onSelectedFightDelete(sortIndex)}/>\n    </ListButton>\n  );\n});\n\nconst SortableList = SortableContainer(({ list, listItemHandlers }) => {\n  return (\n    <ListInnerContainer>\n      { list.map((value, index) => (\n        <SortableItem\n          key={`item-${index}`}\n          index={index}\n          sortIndex={index}\n          value={value}\n          listItemHandlers={listItemHandlers}\n          render={value}\n        />\n      ))}\n    </ListInnerContainer>\n  );\n});\n\nconst SortableComponent = props => {\n  const onSortEnd = ({oldIndex, newIndex}) => {\n    const newArr = arrayMove(props.list, oldIndex, newIndex);\n    props.handleDrag(newArr);\n  };\n\n  return (\n    <ListContainer>\n      <Label>\n        {props.label} (Hold to drag)\n      </Label>\n      <SortableList\n        list={props.list}\n        listItemHandlers={props.listItemHandlers}\n        pressDelay={100}\n        onSortEnd={onSortEnd}\n        onClick={props.onClick}\n        lockAxis=\"y\"\n      />\n    </ListContainer>\n  );\n}\n\nexport default SortableComponent;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport BigNumber from 'bignumber.js';\n\nBigNumber.config({ DECIMAL_PLACES: 3, ROUNDING_MODE: 1 });\n\nconst expTable = [\n  1, 2, 3, 5, 7, 10, 15, 20, 30, 50, 70, 90, 120 , 160 , 200 , 400 , 900 , 1600, 2600, 3900, 5100 , 6000 , 6900 , 7500 , 8000 , 8500 , 9000 , 9300 , 9700 , 10000\n];\n\nconst offset = 14;\n\nconst ExperienceContainer = ({ levels, fights }) => {\n\n  const results = levels.map(level => {\n    const startingLevel = parseFloat(level);\n    const finalLevel = fights.reduce((currentLevel, currentFight) => {\n      const partySize = parseInt(currentFight.partySize);\n      if (partySize === 0) {\n        return currentLevel;\n      }\n      const expGrowth = new BigNumber(currentFight.levels.reduce((exp, enemyLevel) => {\n        let levelDiff = Math.ceil(enemyLevel - currentLevel);\n        if (levelDiff > 14) {\n          levelDiff = 15;\n        } else if (levelDiff < -13) {\n          levelDiff = -14;\n        }\n        return (exp + expTable[levelDiff + offset] / 1000);\n      }, 0)).dividedBy(partySize);\n      return expGrowth.plus(currentLevel).toFormat(3);\n    }, startingLevel);\n    return finalLevel;\n  });\n\n  return (\n    <Container style={{ flex: 1 }} textAlign=\"center\">\n      {\n        results.map((level, index) =>\n          <div key={`${level}-${index}`}>\n            {levels[index]} : {level}\n          </div>\n        )\n      }\n    </Container>\n  );\n}\n\nexport default withRouter(ExperienceContainer);\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Form } from 'semantic-ui-react';\nimport { DoubleListSelectorDiv, ListSelector } from 'components/DoubleListSelector';\nimport SortableContainer from 'components/ListSelector';\nimport ExperienceResult from './experience-result';\nimport './experience.scss';\n\nconst ExperienceForm = ({ areas }) => {\n  const [levels, setLevels] = useState('24.165');\n  const [selectedArea, setSelectedArea] = useState('Cave of the Past');\n  const [selectedFights, setSelectedFights] = useState([]);\n  const onPartySizeChange = (partySize, index) => {\n    setSelectedFights(prevSelectedFights => [\n      ...prevSelectedFights.slice(0, index),\n      { partySize, enemyGroup: prevSelectedFights[index].enemyGroup },\n      ...prevSelectedFights.slice(index + 1)\n    ])\n  };\n\n  const onSelectedFightDelete = index => setSelectedFights(prevSelectedFights => [\n    ...prevSelectedFights.slice(0, index),\n    ...prevSelectedFights.slice(index + 1)\n  ])\n\n  return (\n    <Container textAlign=\"center\">\n      <Form size=\"large\">\n        <Form.Input\n          label=\"Character Level\"\n          type=\"text\"\n          value={levels}\n          min={1}\n          max={99}\n          step={.001}\n          onChange={e => setLevels(e.target.value)}\n        />\n        <Form.Dropdown\n          label=\"Areas\"\n          placeholder=\"Area\"\n          options={Object.keys(areas).map(name =>\n            ({ key: name, value: name, text: areas[name].name })\n          )}\n          value={selectedArea}\n          onChange={(_e, data) => setSelectedArea(data.value)}\n          multiple={false}\n          search={true}\n          selection={true}\n        />\n        <DoubleListSelectorDiv>\n          <ListSelector\n            label=\"Add Fight\"\n            click={index => setSelectedFights([...selectedFights, { partySize: 6, enemyGroup: areas[selectedArea].encounterTable[index]} ])}\n            list={areas[selectedArea].encounterTable}\n            optionNames={areas[selectedArea].encounterTable.map(group => group.name)}\n          />\n          <SortableContainer\n            label=\"Selected Fights\"\n            onClick={index => setSelectedFights([\n              ...selectedFights.slice(0, index),\n              ...selectedFights.slice(index + 1)\n            ])}\n            handleDrag={fights => setSelectedFights(fights)}\n            listItemHandlers={{ onPartySizeChange, onSelectedFightDelete }}\n            list={selectedFights}\n          />\n        </DoubleListSelectorDiv>\n      </Form>\n      <ExperienceResult\n        levels={levels.split(',')}\n        fights={selectedFights.map(selectedFight => ({\n          partySize: selectedFight.partySize,\n          levels: selectedFight.enemyGroup.enemies.map(enemy => enemy.stats.lvl)\n        }))}\n      />\n    </Container>\n  );\n}\n\nexport default withRouter(ExperienceForm);\n","import * as React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Helpers } from 'suikoden-rng-lib';\nimport { Container, Form } from 'semantic-ui-react';\n\nclass RunAssistantForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rng: Helpers.numToHexString(0x12),\n      iterations: 1000,\n      partylevel: 0,\n      realistic: true,\n      areas: []\n    };\n  }\n\n  handleInputChange = (_event, { checked, name, value }) => {\n    this.setState(prevState => ({ ...prevState, [name]: checked || value }));\n  }\n\n  handleAreaChange = (_event, data) => {\n    this.setState({ areas: data.value });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const params = new URLSearchParams();\n    Object.keys(this.state).forEach((key) => {\n      params.append(key, this.state[key]);\n    });\n    this.props.history.push(`/runassist/result?${params.toString()}`);\n  }\n\n  render() {\n    return (\n      <Container textAlign=\"center\">\n        <Form size=\"large\" onSubmit={this.handleSubmit}>\n          <Form.Input\n            label=\"Initial RNG Value\"\n            name=\"rng\"\n            type=\"text\"\n            value={this.state.rng}\n            onChange={this.handleInputChange}\n          />\n          <Form.Input\n            label=\"Iterations\"\n            name=\"iterations\"\n            type=\"number\"\n            step={500}\n            value={this.state.iterations}\n            onChange={this.handleInputChange}\n          />\n          <Form.Input\n            label=\"Party Level\"\n            name=\"partylevel\"\n            type=\"number\"\n            value={this.state.partylevel}\n            onChange={this.handleInputChange}\n          />\n          <Form.Dropdown\n            label=\"Areas\"\n            placeholder=\"Area\"\n            options={Helpers.areaNamesWithRandomEncounters.map(name =>\n              ({ key: name, value: name, text: this.props.areas[name].name })\n            )}\n            value={this.state.areas}\n            onChange={this.handleAreaChange}\n            multiple={true}\n            search={true}\n            selection={true}\n          />\n          <Form.Checkbox\n            label=\"Realistic Mode\"\n            name=\"realistic\"\n            checked={this.state.realistic}\n            onChange={this.handleInputChange}\n          />\n          <Form.Button type=\"submit\" content=\"Generate Encounters\" primary={true}/>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(RunAssistantForm);\n","export const switchArea = area => ({\n  type: 'SWITCH_AREA',\n  area\n});\n\nexport const previousFight = () => ({\n  type: 'PREVIOUS_FIGHT'\n});\n\nexport const nextFight = () => ({\n  type: 'NEXT_FIGHT'\n});\n\nexport const selectFight = index => ({\n  type: 'SELECT_FIGHT',\n  index\n});\n\nexport const findFight = name => ({\n  type: 'FIND_FIGHT',\n  name\n});\n\nexport const findMatch = name => ({\n  type: 'FIND_MATCH',\n  name\n});\n\nexport const jumpRNG = jump => ({\n  type: 'JUMP_RNG',\n  jump\n});\n\nexport const togglePatternMode = () => ({\n  type: 'TOGGLE_PATTERN_MODE'\n});\n","import { handleActions } from 'redux-actions';\nimport { Helpers } from  'suikoden-rng-lib';\n\nconst initialState = {\n  currentArea: 0,\n  areas: [],\n  fightsList: [],\n  index: 0,\n  pattern: [],\n  patternMode: false\n};\n\nfunction calcFightIndexAfterRNGChange(fights, index) {\n  for (let i = 0; i < fights.length; i++) {\n    if (fights[i].index > index) {\n      return i;\n    }\n  }\n  return fights.length - 1;\n}\n\nexport default handleActions(\n  {\n    SWITCH_AREA: (state, action) => {\n      const currentArea = state.areas.map(area => area.name).findIndex(name => action.area === name);\n      const rngIndex = getCurrentFight(state).index;\n      if (currentArea === -1) {\n        return state;\n      }\n\n      let index = state.index;\n      if (state.fightsList[currentArea].length <= index) {\n        index = state.fightsList[currentArea].length - 1;\n      }\n\n      // Decrement index until rng is lower than current\n      while (state.fightsList[currentArea][index].index > rngIndex && index > 0) {\n        index--;\n      }\n\n      // Then increment index until rng is 1 higher than current\n      while (state.fightsList[currentArea][index].index < rngIndex\n        && index < state.fightsList[currentArea].length - 1) {\n        index++;\n      }\n\n      return {\n        ...state,\n        currentArea,\n        pattern: [],\n        index\n      };\n    },\n    PREVIOUS_FIGHT: (state, _action) => {\n      if (state.index !== 0) {\n        return {\n          ...state,\n          pattern: [],\n          index: state.index - 1\n        };\n      }\n      return state;\n    },\n    NEXT_FIGHT: (state, _action) => {\n      if (state.index < getCurrentFights(state).length - 1) {\n        return {\n          ...state,\n          pattern: [],\n          index: state.index + 1\n        };\n      }\n      return state;\n    },\n    SELECT_FIGHT: (state, action) => {\n      if (action.index < getCurrentFights(state).length - 1) {\n        return {\n          ...state,\n          pattern: [],\n          index: action.index\n        };\n      }\n      return state;\n    },\n    FIND_FIGHT: (state, action) => {\n      if (!state.patternMode) {\n        let index = findFight(state, action.name);\n        index = index !== -1 ? index : state.index;\n        return {\n          ...state,\n          pattern: [],\n          index\n        };\n      }\n      const currentArea = getCurrentArea(state);\n      const encounterTableIndex = getEnemyGroupEncounterIndex(action.name, currentArea.enemies);\n      const pattern = state.pattern.concat([encounterTableIndex]);\n      const searchStartIndex = Math.max(0, state.index - pattern.length + 2);\n      const fights = getCurrentFights(state)\n        .map(fight => (getEnemyGroupEncounterIndex(fight.enemyGroup.name, currentArea.enemies)))\n        .slice(searchStartIndex);\n      if (pattern.length > 1) {\n        const searchMatchIndex = Helpers.encounterSequenceToString(fights).search(Helpers.encounterSequenceToString(pattern));\n        if (searchMatchIndex >= 0) {\n          return {\n            ...state,\n            pattern,\n            index: searchStartIndex + searchMatchIndex + pattern.length - 1\n          };\n        } else {\n          return state;\n        }\n      }\n      const index = findFight({...state, index: searchStartIndex }, action.name);\n      return {\n        ...state,\n        pattern,\n        index: index !== -1 ? index : searchStartIndex\n      };\n    },\n    JUMP_RNG: (state, action) => {\n      const fights = getCurrentFights(state);\n      const index = calcFightIndexAfterRNGChange(fights, getCurrentFight(state).index + action.jump);\n      return {\n        ...state,\n        pattern: [],\n        index\n      };\n    },\n    TOGGLE_PATTERN_MODE: (state, _action) => ({\n      ...state, patternMode: !state.patternMode\n    })\n  },\n  initialState);\n\n// Returns { name: string, enemies: EnemyGroupData[] }\nexport function getCurrentArea(state) {\n  return state.areas[state.currentArea];\n}\n\n// Returns EnemyGroupData[]\nexport function getCurrentEnemies(state) {\n  return getCurrentArea(state).enemies;\n}\n\n// Returns Fight\nexport function getCurrentFight(state) {\n  return state.fightsList[state.currentArea][state.index];\n}\n\n// Returns Fight[]\nexport function getCurrentFights(state) {\n  return state.fightsList[state.currentArea];\n}\n\n// Returns Fight\nexport function getFight(state, index) {\n  return getCurrentFights(state)[index];\n}\n\n// Returns index of next fight of an enemy group\nexport function findFight(state, enemyGroup) {\n  return getCurrentFights(state).findIndex((fight, index) => {\n    return (fight.enemyGroup.name === enemyGroup && index > state.index);\n  });\n}\n\n// Returns index of next fight with current enemyGroup\nexport function findNextFight(state) {\n  const name = getCurrentFight(state).enemyGroup.name;\n  return findFight(state, name);\n}\n\nfunction getEnemyGroupEncounterIndex(name, enemies) {\n  return enemies.findIndex(group => {\n    return (group.name === name);\n  });\n}\n","import * as React from 'react';\nimport VirtTable from '../Table';\nimport { Container } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { selectFight } from './actions/RunAssistant';\nimport { getCurrentFights } from './reducers/RunAssistant';\nimport { Helpers } from 'suikoden-rng-lib';\n\nconst mapStateToProps = state => ({\n  fights: getCurrentFights(state.RunAssistant),\n  currentRow: state.RunAssistant.index,\n  columns: state.config.columns,\n  headerHeight: state.config.table.headerHeight,\n  rowHeight: state.config.table.rowHeight,\n  rowStyle: { ...state.config.table.rowStyle, fontSize: `${state.config.table.rowStyle.fontSize}px` }\n});\n\nconst mapDispatchToProps = {\n  selectFight\n};\n\nconst RunAssistantTable = props => {\n  const columns: Column[] =  props.columns;\n  const fights = props.fights.map(fight => ({\n    ...fight,\n    enemyGroup: fight.enemyGroup.name,\n    enemyGroupImage: (\n      <div style={{ height: props.rowHeight }} className=\"enemyGroupImage\">\n        {\n          fight.enemyGroup.enemies.map((enemy, index) => (\n            <img style={{ height: props.rowHeight }} className=\"enemyImage\" alt=\"\" key={index} src={`data:image/png;base64, ${enemy.img}`}/>\n          ))\n        }\n      </div>\n    ),\n    run: fight.run ? 'Run' : 'Fail',\n    startRNG: Helpers.numToHexString(fight.startRNG),\n    battleRNG: Helpers.numToHexString(fight.battleRNG),\n    champVal: fight.enemyGroup.champVal\n  }));\n\n  return (\n    <Container textAlign=\"center\" style={{ display: 'block', height: '100%' }}>\n      <VirtTable\n        currentRow={props.currentRow}\n        columns={columns}\n        data={fights}\n        filter={true}\n        filterFromData={['enemyGroupImage']}\n        headerHeight={props.headerHeight}\n        onRowClick={(index: number) => props.selectFight(index)}\n        rowHeight={props.rowHeight}\n        rowStyle={props.rowStyle}\n      />\n    </Container>\n  );\n};\n\nexport const ConnectedTable = connect(mapStateToProps, mapDispatchToProps)(RunAssistantTable);\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst EnemyImage = styled.img`\n  padding: 0 2px;\n  max-height: 56px;\n`;\n\nexport const EnemyButtonText = styled.button`\n  &&&&& {\n    width: 100%;\n    flex: 0 0 auto;\n    margin: 2px 0;\n  }\n`;\n\nconst EnemyButtonImage = styled.div`\n  &&&&& {\n    height: 60px;\n    width: 100%;\n    margin: 2px 0;\n    flex: 0 0 auto;\n    border: none;\n    border-radius: .28571429rem;\n    padding: 2px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst CompactEnemyButtonText = styled.div`\n  &&&&& {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 60px;\n    flex: 1;\n    margin: 0 2px;\n  }\n`;\n\nconst CompactEnemyButtonImage = styled.div`\n  &&&&& {\n    height: 60px;\n    margin: 0 2px;\n    flex: 1;\n    border: none;\n    border-radius: .28571429rem;\n    padding: 2px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const CompactEnemyButton = props => {\n  const { useImages, enemyGroup } = props;\n  if (useImages) {\n    return (\n      <CompactEnemyButtonImage\n        className=\"ui button\"\n        role=\"button\"\n        {...props}\n      >\n        {enemyGroup.enemies.map((enemy, index) => <EnemyImage key={index} src={enemy.img}/>)}\n      </CompactEnemyButtonImage>\n    );\n  }\n  return (\n    <CompactEnemyButtonText\n      className=\"ui button\"\n      role=\"button\"\n      {...props}\n    >\n      {enemyGroup.name}\n    </CompactEnemyButtonText>\n  );\n};\n\nconst EnemyButton = props => {\n  const { useImages, enemyGroup } = props;\n  if (useImages) {\n    return (\n      <EnemyButtonImage\n        className=\"ui button\"\n        role=\"button\"\n        {...props}\n      >\n        {enemyGroup.enemies.map((enemy, index) => <EnemyImage key={index} src={`data:image/png;base64, ${enemy.img}`}/>)}\n      </EnemyButtonImage>\n    );\n  } else {\n    return (\n      <EnemyButtonText\n        className=\"ui button\"\n        role=\"button\"\n        {...props}\n      >\n        {enemyGroup.name}\n      </EnemyButtonText>\n    );\n  }\n};\n\nexport default EnemyButton;\n","import React, { useCallback, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrentEnemies } from 'RunAssistant/reducers/RunAssistant';\nimport { findFight } from 'RunAssistant/actions/RunAssistant';\nimport { setEnemyButtonGroupSize } from 'RunAssistant/actions/controls';\nimport { Button, Container, Segment } from 'semantic-ui-react';\nimport { CompactEnemyButton } from '../enemy-buttons/EnemyButton';\n\nconst mapStateToProps = state => ({\n  enemies: getCurrentEnemies(state.RunAssistant),\n  useImages: state.config.useImages,\n  patternMode: state.RunAssistant.patternMode,\n  groupSize: state.controls.compactEnemyButtonsGroupSize,\n  hotkeys: state.config.hotkeys.compactModeEnemyButtons\n});\n\nconst mapDispatchToProps = {\n  findFight,\n  setEnemyButtonGroupSize\n};\n\nconst EnemyButtonContainer = ({ enemies, findFight, groupSize, hotkeys, setEnemyButtonGroupSize, useImages }) => {\n  const enemyGroupSizes = enemies.reduce((groupSizes, enemyGroup) => {\n    const enemyCount = enemyGroup.enemies.length;\n    if (!groupSizes.includes(enemyCount)) {\n      groupSizes.push(enemyCount);\n    }\n    return groupSizes;\n  }, []).sort();\n\n  const enemyGroupsBySize = enemies.reduce((groups, enemyGroup) => {\n    const enemyCount = enemyGroup.enemies.length;\n    groups[enemyCount].push(enemyGroup);\n    return groups;\n  }, { 1: [], 2: [], 3: [], 4: [], 5: [], 6: [] });\n\n  const selectFight = useCallback(enemyGroup => {\n    findFight(enemyGroup.name);\n  }, [findFight]);\n\n  const selectGroupSize = useCallback(size => {\n    if (enemyGroupsBySize[size].length === 1) {\n      findFight(enemyGroupsBySize[size][0].name);\n    } else if (enemyGroupsBySize[size].length > 0) {\n      setEnemyButtonGroupSize(size);\n    }\n  }, [enemyGroupsBySize, findFight, setEnemyButtonGroupSize]);\n\n  const handleHotkey = useCallback(index => {\n    if (groupSize === null) {\n      selectGroupSize(index + 1);\n    } else if (index < enemyGroupsBySize[groupSize].length) {\n      selectFight(enemyGroupsBySize[groupSize][index]);\n    }\n  }, [enemyGroupsBySize, groupSize, selectFight, selectGroupSize]);\n\n  useEffect(() => {\n    const handler = event => {\n      if (event.target.tagName.toLowerCase() !== 'input') {\n        const index = hotkeys.indexOf(event.key);\n        if (index !== -1) {\n          handleHotkey(index);\n        }\n      }\n    };\n\n    document.addEventListener('keydown', handler);\n    return () => document.removeEventListener('keydown', handler);\n  }, [hotkeys, handleHotkey]);\n\n  return (\n    <Container style={{ width: '100%' }}>\n      <Segment>\n        <Button.Group\n          style={{ width: '100%', margin: '2px' }}\n        >\n          { groupSize === null ?\n            enemyGroupSizes.map(size =>\n              <button\n                key={size}\n                style={{ height: '60px', margin: '0 2px', flex: 1 }}\n                className=\"ui button\"\n                onClick={() => selectGroupSize(size)}\n              >\n                {size}\n              </button>\n            ) :\n            enemyGroupsBySize[groupSize].map(enemyGroup =>\n              <CompactEnemyButton\n                key={enemyGroup.name}\n                useImages={useImages}\n                enemyGroup={enemyGroup}\n                onClick={() => selectFight(enemyGroup)}\n              />\n            )\n          }\n        </Button.Group>\n      </Segment>\n    </Container>\n  );\n};\n\nconst ConnectedEnemyButtonContainer = connect(mapStateToProps, mapDispatchToProps)(EnemyButtonContainer);\n\nexport default ConnectedEnemyButtonContainer;\n","export const setEnemyButtonGroupSize = size => ({\n  type: 'SET_ENEMY_BUTTON_GROUP_SIZE',\n  size\n});\n","import styled from 'styled-components';\n\nconst EvenColumnDiv = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport default EvenColumnDiv;\n","import * as React from 'react';\nimport { Button, Container, Segment } from 'semantic-ui-react';\nimport EnemyButton from './EnemyButton';\nimport EvenColumnContainer from './even-column-container';\n\nconst EnemyButtonsView = ({ enemiesByEnemyCount, useImages, enemyButtonOnClick }) => {\n  return (\n    <Container style={{ width: '100%' }}>\n      <Segment>\n        <EvenColumnContainer>\n          {enemiesByEnemyCount.map((enemiesGroup, index) => {\n            return (\n              <Button.Group\n                style={{ width: '100%', margin: '2px' }}\n                vertical={true}\n                key={index}\n              >\n                {enemiesGroup.map((enemyGroup) => {\n                  return (\n                    <EnemyButton\n                      key={enemyGroup.name}\n                      useImages={useImages}\n                      enemyGroup={enemyGroup}\n                      onClick={() => enemyButtonOnClick(enemyGroup.name)}\n                    />\n                  );\n                })}\n              </Button.Group>\n            );\n          })}\n        </EvenColumnContainer>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default EnemyButtonsView;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrentEnemies } from 'RunAssistant/reducers/RunAssistant';\nimport { findFight } from 'RunAssistant/actions/RunAssistant';\nimport EnemyButtonsView from './enemy-buttons-view';\n\nconst mapStateToProps = state => ({\n  enemies: getCurrentEnemies(state.RunAssistant),\n  useImages: state.config.useImages,\n  patternMode: state.RunAssistant.patternMode\n});\n\nconst mapDispatchToProps = {\n  findFight\n};\n\nconst EnemyButtonContainer = props => {\n  const enemiesByEnemyCount = props.enemies\n    .reduce(\n      (groups, enemyData) => {\n        const enemyCount = enemyData.enemies.length - 1;\n        if (groups[enemyCount] === undefined) {\n          groups[enemyCount] = [];\n        }\n        if (!groups[enemyCount].some(currentEnemyData => enemyData.name === currentEnemyData.name)) {\n          groups[enemyCount].push(enemyData);\n        }\n        return groups;\n      },\n      new Array(6))\n    .reduce(\n      (arr, enemyGroup) => {\n        if (enemyGroup === undefined) {\n          return arr;\n        }\n        if (enemyGroup.length > 1) {\n          enemyGroup.sort((a, b) => a.name < b.name ? -1 : 1);\n        }\n        arr.push(enemyGroup);\n        return arr;\n      },\n      []);\n\n  return (\n    <EnemyButtonsView\n      enemiesByEnemyCount={enemiesByEnemyCount}\n      useImages={props.useImages}\n      enemyButtonOnClick={(enemyName) => props.findFight(enemyName)}\n    />\n  );\n};\n\nconst ConnectedEnemyButtonContainer = connect(mapStateToProps, mapDispatchToProps)(EnemyButtonContainer);\n\nexport default ConnectedEnemyButtonContainer;\n","import React, { useState, useEffect } from 'react';\nimport { Form } from 'semantic-ui-react';\n\nconst HotkeyInput = props => {\n  const [selected, setSelected] = useState(false);\n  const { action, hotkey, changeHotkey, ...otherProps } = props;\n\n  useEffect(() => {\n    document.getElementById(action).addEventListener('focus', () => setSelected(true));\n    document.getElementById(action).addEventListener('blur', () => setSelected(false));\n    document.getElementById(action).addEventListener('keypress', e => {\n      changeHotkey(e.key.toLowerCase())\n      setSelected(false);\n    });\n  }, [action, changeHotkey]);\n\n  return (\n    <Form.Input\n      id={props.action}\n      value={\n        selected ?\n        'Press key to bind.' :\n        hotkey.toLowerCase()\n      }\n      {...otherProps}\n    />\n  );\n};\n\nexport default HotkeyInput;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Header, Modal } from 'semantic-ui-react';\nimport HotkeyInput from './hotkey';\nimport {\n  changeUseImages,\n  changeCompactMode,\n  changeColumnWidth,\n  changeColumnVisibility,\n  changeRowFontSize,\n  changeTableHeaderHeight,\n  changeTableRowHeight,\n  changeHotkey,\n  changeCompactModeEnemyButtonsHotkey,\n  resetToDefault\n} from 'RunAssistant/actions/config';\n\nconst mapStateToProps = state => ({\n  ...state.config\n});\n\nconst mapDispatchToProps = {\n  changeUseImages,\n  changeCompactMode,\n  changeColumnVisibility,\n  changeColumnWidth,\n  changeRowFontSize,\n  changeTableRowHeight,\n  changeTableHeaderHeight,\n  changeCompactModeEnemyButtonsHotkey,\n  changeHotkey,\n  resetToDefault\n};\n\nconst saveToLocalStorage = props => {\n  window.localStorage.setItem('config', JSON.stringify({\n    useImages: props.useImages,\n    compactMode: props.compactMode,\n    columns: props.columns,\n    table: props.table,\n    hotkeys: props.hotkeys\n  }));\n};\n\nconst ConfigModal = props => (\n  <Modal trigger={props.trigger}>\n    <Modal.Header>\n      Run Assistant Configuration\n    </Modal.Header>\n    <Modal.Content>\n      <Form>\n        <Header>Run Assistant</Header>\n        <Form.Group inline={true}>\n          <Form.Checkbox\n            checked={props.useImages}\n            onChange={() => props.changeUseImages(!props.useImages)}\n            label=\"Use Enemy Images\"\n            toggle={true}\n          />\n          <Form.Checkbox\n            checked={props.compactMode}\n            onChange={() => props.changeCompactMode(!props.compactMode)}\n            label=\"Enemy Compact Mode\"\n            toggle={true}\n          />\n        </Form.Group>\n        <Header>\n          Table\n        </Header>\n        <Form.Group widths=\"equal\" label=\"Default Visible Columns\">\n          {props.columns.map((column, index) => (\n            <Form.Checkbox\n              key={column.key}\n              checked={column.show !== false}\n              onChange={() => props.changeColumnVisibility(index, !column.show)}\n              label={column.label}\n            />\n          ))}\n        </Form.Group>\n        <Form.Group>\n          <Form.Input\n            type=\"number\"\n            onChange={e => props.changeRowFontSize(parseInt(e.currentTarget.value))}\n            min={4}\n            max={72}\n            step={2}\n            value={props.table.rowStyle.fontSize}\n            label=\"Font Size (px)\"\n          />\n          <Form.Input\n            type=\"number\"\n            onChange={e => props.changeTableRowHeight(parseInt(e.currentTarget.value))}\n            min={10}\n            max={120}\n            step={10}\n            value={props.table.rowHeight}\n            label=\"Table Row Height (px)\"\n          />\n          <Form.Input\n            type=\"number\"\n            onChange={e => props.changeTableHeaderHeight(parseInt(e.currentTarget.value))}\n            min={10}\n            max={120}\n            step={10}\n            value={props.table.headerHeight}\n            label=\"Header Row Height (px)\"\n          />\n        </Form.Group>\n        <Header>\n          Hotkeys\n        </Header>\n        <Form.Group widths=\"equal\">\n          <HotkeyInput\n            key=\"nextFight\"\n            action=\"nextFight\"\n            label=\"Next Fight\"\n            type=\"text\"\n            changeHotkey={key => props.changeHotkey('nextFight', key)}\n            hotkey={props.hotkeys.nextFight}\n          />\n          <HotkeyInput\n            key=\"prevFight\"\n            action=\"prevFight\"\n            label=\"Previous Fight\"\n            type=\"text\"\n            changeHotkey={key => props.changeHotkey('prevFight', key)}\n            hotkey={props.hotkeys.prevFight}\n          />\n        </Form.Group>\n        <Header>\n          Compact Enemy Button Hotkeys\n        </Header>\n        <Form.Group widths=\"equal\">\n          {props.hotkeys.compactModeEnemyButtons.slice(0, 3).map((key, index) =>\n            <HotkeyInput\n              key={`Enemy / Group ${index + 1}`}\n              action={`Enemy / Group ${index + 1}`}\n              label={`Enemy / Group ${index + 1}`}\n              type=\"text\"\n              changeHotkey={key => props.changeCompactModeEnemyButtonsHotkey(index, key)}\n              hotkey={key.toString()}\n            />\n          )}\n        </Form.Group>\n        <Form.Group widths=\"equal\">\n          {props.hotkeys.compactModeEnemyButtons.slice(3).map((key, index) =>\n            <HotkeyInput\n              key={`Enemy / Group ${index + 4}`}\n              action={`Enemy / Group ${index + 4}`}\n              label={`Enemy / Group ${index + 4}`}\n              type=\"text\"\n              changeHotkey={key => props.changeCompactModeEnemyButtonsHotkey(index + 3, key)}\n              hotkey={key.toString()}\n            />\n          )}\n        </Form.Group>\n        <Form.Group inline={true}>\n          <Form.Button content=\"Save Settings\" primary={true} onClick={() => saveToLocalStorage(props)}/>\n          <Form.Button content=\"Reset to Default\" onClick={() => props.resetToDefault()}/>\n        </Form.Group>\n      </Form>\n    </Modal.Content>\n  </Modal>\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigModal);\n","export const changeUseImages = useImages => ({\n  type: 'CHANGE_USE_IMAGES',\n  useImages\n});\n\nexport const changeCompactMode = compactMode => ({\n  type: 'CHANGE_COMPACT_MODE',\n  compactMode\n});\n\nexport const changeColumnVisibility = (index, show) => ({\n  type: 'CHANGE_COLUMN_VISIBILITY',\n  index,\n  show\n});\n\nexport const changeColumnWidth = (index, width) => ({\n  type: 'CHANGE_COLUMN_WIDTH',\n  index,\n  width\n});\n\nexport const changeTableRowHeight = height => ({\n  type: 'CHANGE_TABLE_ROW_HEIGHT',\n  height\n});\n\nexport const changeTableHeaderHeight = height => ({\n  type: 'CHANGE_TABLE_HEADER_HEIGHT',\n  height\n});\n\nexport const resetToDefault = () => ({\n  type: 'RESET_TO_DEFAULT'\n});\n\nexport const changeRowFontSize = size => ({\n  type: 'CHANGE_ROW_FONT_SIZE',\n  size\n});\n\nexport const changeHotkey = (action, key) => ({\n  type: 'CHANGE_HOTKEY',\n  action,\n  key\n})\n\nexport const changeCompactModeEnemyButtonsHotkey = (index, key) => ({\n  type: 'CHANGE_COMPACT_MODE_ENEMY_BUTTONS_HOTKEY',\n  index,\n  key\n});\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Checkbox, Container, Dropdown, Segment } from 'semantic-ui-react';\nimport CompactEnemyButtons from './enemy-buttons-compact/enemy-buttons-container';\nimport EnemyButtons from './enemy-buttons';\nimport { jumpRNG, nextFight, previousFight, findFight, switchArea, togglePatternMode } from '../actions/RunAssistant';\nimport { findNextFight, getCurrentArea, getCurrentFight, getFight } from '../reducers/RunAssistant';\nimport ConfigModal from './modal/config-modal';\nimport styled from 'styled-components';\n\nconst mapStateToProps = state => ({\n  areas: state.RunAssistant.areas.map(area => area.name),\n  currentArea: getCurrentArea(state.RunAssistant).name,\n  findNextFight: () => {\n    const index = findNextFight(state.RunAssistant);\n    return index > -1 ? getFight(state.RunAssistant, index) : null;\n  },\n  getCurrentFight: () => getCurrentFight(state.RunAssistant),\n  patternMode: state.RunAssistant.patternMode,\n  compactMode: state.config.compactMode,\n  hotkeys: state.config.hotkeys\n});\n\nconst mapDispatchToProps = {\n  jumpRNG,\n  nextFight,\n  previousFight,\n  findFight,\n  switchArea,\n  togglePatternMode\n};\n\nclass Controls extends React.Component {\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleHotkeyNextFight);\n    document.addEventListener('keydown', this.handleHotkeyPrevFight);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleHotkeyNextFight);\n    document.removeEventListener('keydown', this.handleHotkeyPrevFight);\n  }\n\n  handleHotkeyNextFight = event => {\n    if (event.target.tagName.toLowerCase() !== 'input') {\n      if (event.key === this.props.hotkeys.nextFight) {\n        this.props.nextFight();\n      }\n    }\n  }\n\n  handleHotkeyPrevFight = event => {\n    if (event.target.tagName.toLowerCase() !== 'input') {\n      if (event.key === this.props.hotkeys.prevFight) {\n        this.props.previousFight();\n      }\n    }\n  }\n\n  render() {\n    const { areas, currentArea, compactMode } = this.props;\n    return (\n      <Container className={this.props.className}>\n        {\n          compactMode ?\n          <CompactEnemyButtons/> :\n          <EnemyButtons/>\n        }\n        <Segment style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Dropdown\n            label=\"Areas\"\n            placeholder=\"Area\"\n            value={currentArea}\n            options={areas.map((name) => { return { key: name, value: name, text: name }; })}\n            onChange={(_e, data) => {\n              this.props.switchArea(data.value);\n            }}\n            selection={true}\n          />\n          <Checkbox\n            style={{ display: 'flex', margin: '0 1em', alignItems: 'center' }}\n            label=\"Pattern Mode\"\n            checked={this.props.patternMode}\n            onChange={() => this.props.togglePatternMode()}\n          />\n          <ConfigModal trigger={<Button>Config</Button>}/>\n          <span style={{ display: 'flex', flex: 1, justifyContent: 'flex-end' }}>\n            <Button content=\"+100\" onClick={() => this.props.jumpRNG(100)}/>\n            <Button content=\"+500\" onClick={() => this.props.jumpRNG(500)}/>\n            <Button content=\"+1000\" onClick={() => this.props.jumpRNG(1000)}/>\n            <Button content=\"Previous\" onClick={() => this.props.previousFight()}/>\n            <Button content=\"Next\" onClick={() => this.props.nextFight()}/>\n          </span>\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nconst ConnectedControls = connect(mapStateToProps, mapDispatchToProps)(Controls);\n\nconst StyledControls = styled(ConnectedControls)``;\n\nexport default StyledControls;\n","import { handleActions } from 'redux-actions';\n\nconst columns = [\n  { label: 'Area', key: 'area', width: 200, show: false },\n  { label: 'Enemy Group', key: 'enemyGroup', width: 300, show: true },\n  { label: 'Enemy Group Image', key: 'enemyGroupImage', width: 300, show: false },\n  { label: 'Index', key: 'index', width: 100, show: true },\n  { label: 'Run', key: 'run', width: 100, show: true },\n  { label: 'Encounter RNG', key: 'startRNG', width: 150, show: false },\n  { label: 'Battle RNG', key: 'battleRNG', width: 150, show: true },\n  { label: 'Wheel Attempts', key: 'wheel', width: 150, show: true },\n  { label: 'Champion Value', key: 'champVal', width: 150, show: false }\n];\n\nexport const initialState = {\n  useImages: false,\n  compactMode: false,\n  columns,\n  table: {\n    rowHeight: 30,\n    headerHeight: 30,\n    rowStyle: {\n      fontSize: 16\n    }\n  },\n  hotkeys: {\n    nextFight: 'n',\n    prevFight: 'b',\n    compactModeEnemyButtons: ['1', '2', '3', '4', '5', '6']\n  }\n};\n\nexport default handleActions(\n  {\n    CHANGE_USE_IMAGES: (state, action) => (\n      { ...state, useImages: action.useImages }\n    ),\n    CHANGE_COMPACT_MODE: (state, action) => (\n      { ...state, compactMode: action.compactMode }\n    ),\n    CHANGE_COLUMN_VISIBILITY: (state, action) => (\n      {\n        ...state,\n        columns: state.columns.map((column, index) => {\n          if (index !== action.index) {\n            return column;\n          }\n          return { ...column, show: action.show };\n        })\n      }\n    ),\n    CHANGE_TABLE_ROW_HEIGHT: (state, action) => (\n      { ...state, table: { ...state.table, rowHeight: action.height } }\n    ),\n    CHANGE_TABLE_HEADER_HEIGHT: (state, action) => (\n      { ...state, table: { ...state.table, headerHeight: action.height } }\n    ),\n    CHANGE_ROW_FONT_SIZE: (state, action) => (\n      { ...state,\n        table: {\n          ...state.table,\n          rowStyle: {\n            ...state.table.rowStyle,\n            fontSize: action.size\n          }\n        }\n      }\n    ),\n    CHANGE_HOTKEY: (state, action) => ({\n      ...state,\n      hotkeys: {\n        ...state.hotkeys,\n        [action.action]: action.key\n      }\n    }),\n    CHANGE_COMPACT_MODE_ENEMY_BUTTONS_HOTKEY: (state, action) => ({\n      ...state,\n      hotkeys: {\n        ...state.hotkeys,\n        compactModeEnemyButtons: [\n          ...state.hotkeys.compactModeEnemyButtons.slice(0, action.index),\n          action.key,\n          ...state.hotkeys.compactModeEnemyButtons.slice(action.index + 1)\n        ]\n      }\n    }),\n    RESET_TO_DEFAULT: (_state, _action) => initialState\n  },\n  initialState);\n","import { handleActions } from 'redux-actions';\n\nexport const initialState = {\n  compactEnemyButtonsGroupSize: null\n};\n\nexport default handleActions(\n  {\n    SET_ENEMY_BUTTON_GROUP_SIZE: (state, action) => (\n      { ...state, compactEnemyButtonsGroupSize: action.size }\n    ),\n    FIND_FIGHT: (state, _action) => (\n      { ...state, compactEnemyButtonsGroupSize: null }\n    ),\n    SWITCH_AREA: (state, _action) => (\n      { ...state, compactEnemyButtonsGroupSize: null }\n    ),\n    RESET_TO_DEFAULT: (_state, _action) => initialState\n  },\n  initialState);\n","import config from './config';\nimport RunAssistant from './RunAssistant';\nimport controls from './controls';\nimport { combineReducers } from 'redux';\n\nexport default combineReducers({\n  RunAssistant,\n  config,\n  controls\n});\n","import * as React from 'react';\nimport { Provider } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { Divider } from 'semantic-ui-react';\nimport { RNG } from 'suikoden-rng-lib';\nimport { ConnectedTable as Table } from './Table';\nimport ConnectedControls from './controls';\nimport reducer from './reducers';\nimport { initialState as configDefault } from './reducers/config';\nimport { initialState as controlsDefault } from './reducers/controls';\n\nconst logger = createLogger({});\n\nclass RunAssistantTool extends React.Component {\n  constructor(props) {\n    super(props);\n    const params = new URLSearchParams(this.props.location.search);\n    const rng = parseInt(params.get('rng'));\n    const iterations = parseInt(params.get('iterations'));\n    const partylevel = parseInt(params.get('partylevel'));\n    const areas = params.get('areas').split(',').map((name) => {\n      return this.props.areas[name];\n    });\n    const realistic = params.get('realistic') !== 'false';\n    const fightsList = areas.map(\n      area => area.generateEncounters(new RNG(rng), iterations, partylevel, realistic)\n    );\n    const index = params.get('index') !== null\n      ? parseInt(params.get('index'))\n      : 0;\n\n    let config = window.localStorage.getItem('config');\n    config = config === null ? configDefault : {\n      ...configDefault,\n      ...JSON.parse(config),\n      table: {\n        ...configDefault.table,\n        ...JSON.parse(config).table,\n        rowStyle: {\n          ...configDefault.table.rowStyle,\n          ...JSON.parse(config).table.rowStyle\n        }\n      },\n      hotkeys: {\n        ...configDefault.hotkeys,\n        ...JSON.parse(config).hotkeys\n      }\n    };\n\n    const initialState = {\n      RunAssistant: {\n        currentArea: 0,\n        areas: areas.map(area => ({\n          name: area.name,\n          enemies: area.encounterTable.map(group => {\n            const { name, enemies, champVal } = group;\n            return { name, enemies, champVal };\n          })\n        })),\n        fightsList,\n        index: index < fightsList[0].length ? index : 0,\n        pattern: [],\n        patternMode: false\n      },\n      config: config,\n      controls: controlsDefault\n    };\n\n    this.state = { store: createStore(reducer, initialState, applyMiddleware(logger)) };\n  }\n\n  render() {\n    return (\n      <Provider store={this.state.store}>\n        <React.Fragment>\n          <ConnectedControls/>\n          <Divider hidden={true}/>\n          <Table/>\n        </React.Fragment>\n      </Provider>\n    );\n  }\n}\n\nexport default withRouter(RunAssistantTool);\n","import * as React from 'react';\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst StatsInfo = () => (\n  <Container text={true}>\n    <Segment>\n      <Header>\n        <Link to=\"/stats/starting-stats\">Starting Stats</Link>\n      </Header>\n      <p>\n          Used to calculate a characters starting stats.\n          Can also be used to find good RNG values for a certain character's stat.\n          For example, if you're trying to find a +8 Cleo MGC off Varkas &amp; Sydonia,\n          select Cleo, set starting level to 5, levels gained to 2, and RNG &amp; iterations\n          to whatever suits you. Then look for rows where Cleo has 8 MGC.\n      </p>\n      <p>\n          Note that this doesn't include character's level 1 stats.\n          So if you want actual starting stats, you need to figure out that character's\n          level 1 stats and add them to the values in the table.\n      </p>\n    </Segment>\n    <Segment>\n      <Header>\n        <Link to=\"/stats/level-ups\">Level Ups</Link>\n      </Header>\n      <p>\n        This is used to see what kind of levelups you get off a certain RNG.\n        The primary use case is to optimize stats via formation swaps off certain fights.\n      </p>\n    </Segment>\n  </Container>\n);\n\nexport default StatsInfo;\n","import React, { useState } from 'react';\nimport { Characters } from 'suikoden-rng-lib/stats/characters';\nimport { withRouter } from 'react-router-dom';\nimport { Helpers } from 'suikoden-rng-lib';\nimport { Container, Form } from 'semantic-ui-react';\nimport { InputRNG, InputIterations} from 'components/form/inputs';\n\nconst StartingStatsForm = ({ areas, history }) => {\n  const [characters, setCharacters] = useState([]);\n  const [startingLevel, setStartingLevel] = useState(1);\n  const [levelsGained, setLevelsGained] = useState(1);\n  const [rng, setRNG] = useState(Helpers.numToHexString(0x12));\n  const [iterations, setIterations] = useState(1000);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const params = new URLSearchParams();\n    params.append('characters', characters);\n    params.append('rng', rng);\n    params.append('iterations', iterations);\n    params.append('startingLevel', startingLevel);\n    params.append('levelsGained', levelsGained);\n    history.push(`/stats/starting-stats/result?${params.toString()}`);\n  }\n\n  return (\n    <Container textAlign=\"center\">\n      <Form onSubmit={handleSubmit} action=\"result\" size=\"large\">\n        <Form.Dropdown\n          label=\"Characters\"\n          placeholder=\"Character\"\n          options={Object.keys(Characters).sort().map(name =>\n            ({ key: name, value: name, text: name }))}\n          value={characters}\n          onChange={(_e, data) => setCharacters(data.value)}\n          multiple={true}\n          search={true}\n          selection={true}\n        />\n        <InputRNG\n          value={rng}\n          onChange={e => setRNG(e.target.value)}\n        />\n        <InputIterations\n          value={iterations}\n          onChange={e => setIterations(e.target.value)}\n        />\n        <Form.Input\n          label=\"Starting Level\"\n          type=\"number\"\n          value={startingLevel}\n          onChange={e => setStartingLevel(e.target.value)}\n          min={1}\n          max={99}\n        />\n        <Form.Input\n          label=\"Levels Gained\"\n          type=\"number\"\n          value={levelsGained}\n          onChange={e => setLevelsGained(e.target.value)}\n          min={1}\n          max={98}\n        />\n        <Form.Button type=\"submit\" content=\"Generate Starting Stats\" primary={true}/>\n      </Form>\n    </Container>\n  );\n}\n\nexport default withRouter(StartingStatsForm);\n","import * as React from 'react';\nimport VirtTable from 'Table';\n\nconst Presenter = props => {\n  const columns = [\n    { label: 'Index', key: 'index', width: 50 },\n    { label: 'Character', key: 'character', width: 200 },\n    { label: 'PWR', key: 'PWR', width: 50 },\n    { label: 'SKL', key: 'SKL', width: 50 },\n    { label: 'DEF', key: 'DEF', width: 50 },\n    { label: 'SPD', key: 'SPD', width: 50 },\n    { label: 'MGC', key: 'MGC', width: 50 },\n    { label: 'LUK', key: 'LUK', width: 50 },\n    { label: 'RNG', key: 'rng', width: 100 },\n  ];\n  return <VirtTable columns={columns} data={props.startingStats}/>;\n};\n\nexport default Presenter;\n","import React from 'react';\nimport { characterLevelUps } from 'suikoden-rng-lib/stats/growths';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport { RNG } from 'suikoden-rng-lib';\nimport StartingStatsTable from './starting-stats-result-table';\n\nconst StartingStatsContainer = ({ areas, location }) => {\n  const params = new URLSearchParams(location.search);\n  const characters = params.get('characters').split(',');\n  const rng = parseInt(params.get('rng'));\n  const iterations = parseInt(params.get('iterations'));\n  const startingLevel = parseInt(params.get('startingLevel'));\n  const levelsGained = parseInt(params.get('levelsGained'));\n  const startingStats = [];\n  characters.forEach(character => {\n    const currentRNG = new RNG(rng);\n    for (let i = 0; i < iterations; i++) {\n      startingStats.push({\n        character,\n        index: i,\n        ...characterLevelUps(character, startingLevel, levelsGained, currentRNG.clone()),\n        rng: currentRNG.toString()\n      });\n      currentRNG.next();\n    }\n  });\n\n  return (\n    <Container style={{ flex: 1 }} textAlign=\"center\">\n      <StartingStatsTable startingStats={startingStats}/>\n    </Container>\n  );\n}\n\nexport default withRouter(StartingStatsContainer);\n","import React, { useState } from 'react';\nimport { Characters } from 'suikoden-rng-lib/stats/characters';\nimport { withRouter } from 'react-router-dom';\nimport { Helpers } from 'suikoden-rng-lib';\nimport { Container, Form } from 'semantic-ui-react';\nimport { InputRNG } from 'components/form/inputs';\n\nconst LevelUpsForm = ({ areas, history }) => {\n  const [characters, setCharacters] = useState([]);\n  const [startingLevel, setStartingLevel] = useState(1);\n  const [rng, setRNG] = useState(Helpers.numToHexString(0x12));\n  const [iterations, setIterations] = useState(10);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const params = new URLSearchParams();\n    params.append('characters', characters);\n    params.append('rng', rng);\n    params.append('iterations', iterations);\n    params.append('startingLevel', startingLevel);\n    history.push(`/stats/level-ups/result?${params.toString()}`);\n  }\n\n  return (\n    <Container textAlign=\"center\">\n      <Form onSubmit={handleSubmit} action=\"result\" size=\"large\">\n        <Form.Dropdown\n          label=\"Characters\"\n          placeholder=\"Character\"\n          options={Object.keys(Characters).sort().map(name =>\n            ({ key: name, value: name, text: name }))}\n          value={characters}\n          onChange={(_e, data) => setCharacters(data.value)}\n          multiple={true}\n          search={true}\n          selection={true}\n        />\n        <InputRNG\n          value={rng}\n          onChange={e => setRNG(e.target.value)}\n        />\n        <Form.Input\n          label=\"Iterations\"\n          name=\"iterations\"\n          step=\"1\"\n          type=\"number\"\n          value={iterations}\n          onChange={e => setIterations(e.target.value)}\n        />\n        <Form.Input\n          label=\"Starting Level\"\n          type=\"number\"\n          value={startingLevel}\n          onChange={e => setStartingLevel(e.target.value)}\n          min={1}\n          max={99}\n        />\n        <Form.Button type=\"submit\" content=\"Generate Level Ups\" primary={true}/>\n      </Form>\n    </Container>\n  );\n}\n\nexport default withRouter(LevelUpsForm);\n","import * as React from 'react';\nimport VirtTable from 'Table';\n\nconst Presenter = props => {\n  const columns = [\n    { label: 'Index', key: 'index', width: 50 },\n    { label: 'Character', key: 'character', width: 200 },\n    { label: 'PWR', key: 'PWR', width: 50 },\n    { label: 'SKL', key: 'SKL', width: 50 },\n    { label: 'DEF', key: 'DEF', width: 50 },\n    { label: 'SPD', key: 'SPD', width: 50 },\n    { label: 'MGC', key: 'MGC', width: 50 },\n    { label: 'LUK', key: 'LUK', width: 50 },\n  ];\n  return <VirtTable columns={columns} data={props.levelUps}/>;\n};\n\nexport default Presenter;\n","import React from 'react';\nimport { generateCharacterMultipleLevelup } from 'suikoden-rng-lib/stats/growths';\nimport { withRouter } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport { RNG } from 'suikoden-rng-lib';\nimport LevelUpsTable from './level-ups-result-table';\n\nconst LevelUpsContainer = ({ areas, location }) => {\n  const params = new URLSearchParams(location.search);\n  const characters = params.get('characters').split(',');\n  const rng = parseInt(params.get('rng'));\n  const iterations = parseInt(params.get('iterations'));\n  const startingLevel = parseInt(params.get('startingLevel'));\n  let levelUps = [];\n  characters.forEach(character => {\n    const charLevelUps = generateCharacterMultipleLevelup(new RNG(rng), character, startingLevel, iterations)\n      .map((levelUp, index) => ({ character, index, ...levelUp }));\n    levelUps = levelUps.concat(charLevelUps);\n  });\n\n  return (\n    <Container style={{ flex: 1 }} textAlign=\"center\">\n      <LevelUpsTable levelUps={levelUps}/>\n    </Container>\n  );\n}\n\nexport default withRouter(LevelUpsContainer);\n","import * as React from 'react';\nimport Navbar from './Navbar';\nimport Home from './Home';\nimport EncountersForm from 'components/encounters/form';\nimport EncounterResult from 'components/encounters/result';\nimport ItemDropsForm from 'components/itemdrops/form';\nimport ItemDropsResult from 'components/itemdrops/result';\nimport SequenceForm from 'components/sequence/form';\nimport SequenceResult from 'components/sequence/result';\nimport NPCForm from 'components/npc-movements/form/';\nimport NPCResult from 'components/npc-movements/result/';\nimport RNGFinder from 'components/rngfinder';\nimport Experience from './components/experience';\nimport RunAssistantForm from './RunAssistant';\nimport RunAssistantResult from './RunAssistant/RunAssistantTool';\nimport StatsInfo from 'components/stats/';\nimport StartingStatsForm from 'components/stats/starting-stats/form';\nimport StartingStatsResult from 'components/stats/starting-stats/result';\nimport LevelUpsForm from 'components/stats/level-ups/form';\nimport LevelUpsResult from 'components/stats/level-ups/result';\nimport { Areas } from 'suikoden-rng-lib';\nimport { Route } from 'react-router-dom';\nimport './index.css';\n\nconst App = () => {\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', width: '100%', height: '100vh' }}>\n      <Navbar/>\n      <Route path=\"/\" component={Home} exact={true}/>\n      <Route\n        path=\"/encounters\"\n        exact={true}\n        render={() => (\n          <EncountersForm areas={Areas}/>\n        )}\n      />\n      <Route\n        path=\"/encounters/result\"\n        exact={true}\n        render={() => (\n          <EncounterResult areas={Areas}/>\n        )}\n      />\n      <Route\n        path=\"/stats\"\n        exact={true}\n        render={() => (\n          <StatsInfo/>\n        )}\n      />\n      <Route\n        path=\"/stats/starting-stats\"\n        exact={true}\n        render={() => (\n          <StartingStatsForm/>\n        )}\n      />\n      <Route\n        path=\"/stats/starting-stats/result\"\n        exact={true}\n        render={() => (\n          <StartingStatsResult/>\n        )}\n      />\n      <Route\n        path=\"/stats/level-ups\"\n        exact={true}\n        render={() => (\n          <LevelUpsForm/>\n        )}\n      />\n      <Route\n        path=\"/stats/level-ups/result\"\n        exact={true}\n        render={() => (\n          <LevelUpsResult/>\n        )}\n      />\n      <Route\n        path=\"/sequence\"\n        exact={true}\n        component={SequenceForm}\n      />\n      <Route\n        path=\"/sequence/result\"\n        exact={true}\n        component={SequenceResult}\n      />\n      <Route\n        path=\"/npc\"\n        exact={true}\n        component={NPCForm}\n      />\n      <Route\n        path=\"/npc/result\"\n        exact={true}\n        component={NPCResult}\n      />\n      <Route\n        path=\"/drops\"\n        exact={true}\n        render={() => (\n          <ItemDropsForm areas={Areas}/>\n        )}\n      />\n      <Route\n        path=\"/drops/result\"\n        exact={true}\n        render={() => (\n          <ItemDropsResult areas={Areas}/>\n        )}\n      />\n      <Route\n        path=\"/rngfinder\"\n        render={() => (\n          <RNGFinder areas={Areas}/>\n        )}\n      />\n      <Route\n        path=\"/experience\"\n        exact={true}\n        render={() => (\n          <Experience areas={Areas}/>\n        )}\n      />\n      <Route\n        path=\"/runassist\"\n        exact={true}\n        render={() => (\n          <RunAssistantForm areas={Areas}/>\n        )}\n      />\n      <Route\n        path=\"/runassist/result\"\n        exact={true}\n        render={() => (\n          <RunAssistantResult areas={Areas}/>\n        )}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-virtualized/styles.css';\n\nReactDOM.render(\n  <HashRouter>\n    <App/>\n  </HashRouter>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}